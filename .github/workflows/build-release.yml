name: Build & Release VeL-MuSiC

on:
  push:
    tags:
      - 'v*' # Runs only when a version tag like v1.0.0 is pushed
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: üîß Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
          
      - name: üîß Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: üîç Debug repository structure
        run: |
          echo "=== Repository Structure ==="
          ls -la
          echo ""
          echo "=== Looking for Flutter files ==="
          find . -name "pubspec.yaml" -o -name "lib" -type d -o -name "android" -type d | head -10
          echo ""
          echo "=== Checking common Flutter directories ==="
          for dir in . flutter_app app src VeL-MuSiC vel-music; do
            if [ -d "$dir" ] && [ -f "$dir/pubspec.yaml" ]; then
              echo "Found pubspec.yaml in: $dir"
            fi
          done
      
      - name: üîç Find Flutter project directory
        id: find-flutter
        run: |
          # Check root directory first
          if [ -f "pubspec.yaml" ]; then
            echo "FLUTTER_DIR=." >> $GITHUB_OUTPUT
            echo "Flutter project found in root directory"
          # Check common subdirectories
          elif [ -f "flutter_app/pubspec.yaml" ]; then
            echo "FLUTTER_DIR=flutter_app" >> $GITHUB_OUTPUT
            echo "Flutter project found in flutter_app directory"
          elif [ -f "app/pubspec.yaml" ]; then
            echo "FLUTTER_DIR=app" >> $GITHUB_OUTPUT
            echo "Flutter project found in app directory"
          elif [ -f "VeL-MuSiC/pubspec.yaml" ]; then
            echo "FLUTTER_DIR=VeL-MuSiC" >> $GITHUB_OUTPUT
            echo "Flutter project found in VeL-MuSiC directory"
          elif [ -f "vel-music/pubspec.yaml" ]; then
            echo "FLUTTER_DIR=vel-music" >> $GITHUB_OUTPUT
            echo "Flutter project found in vel-music directory"
          else
            # Search for pubspec.yaml in any subdirectory (up to 2 levels deep)
            FLUTTER_DIR=$(find . -maxdepth 2 -name "pubspec.yaml" -type f | head -1 | xargs dirname 2>/dev/null)
            if [ -n "$FLUTTER_DIR" ] && [ "$FLUTTER_DIR" != "." ]; then
              # Remove leading ./ if present
              FLUTTER_DIR=${FLUTTER_DIR#./}
              echo "FLUTTER_DIR=$FLUTTER_DIR" >> $GITHUB_OUTPUT
              echo "Flutter project found in $FLUTTER_DIR directory"
            elif [ -n "$FLUTTER_DIR" ] && [ "$FLUTTER_DIR" = "." ]; then
              echo "FLUTTER_DIR=." >> $GITHUB_OUTPUT
              echo "Flutter project found in root directory"
            else
              echo "ERROR: No Flutter project found!"
              echo "Searched for pubspec.yaml in:"
              echo "- Root directory"
              echo "- Common subdirectories (flutter_app, app, VeL-MuSiC, vel-music)"
              echo "- All subdirectories up to 2 levels deep"
              exit 1
            fi
          fi
          
      - name: üì¶ Install Dependencies
        working-directory: ${{ steps.find-flutter.outputs.FLUTTER_DIR }}
        run: flutter pub get
        
      - name: üõ†Ô∏è Build Universal APK
        working-directory: ${{ steps.find-flutter.outputs.FLUTTER_DIR }}
        run: flutter build apk --release
        
      - name: üõ†Ô∏è Build Split APKs (per ABI)
        working-directory: ${{ steps.find-flutter.outputs.FLUTTER_DIR }}
        run: flutter build apk --release --split-per-abi
        
      - name: üì¶ Build Android App Bundle (AAB)
        working-directory: ${{ steps.find-flutter.outputs.FLUTTER_DIR }}
        run: flutter build appbundle --release
        
      - name: üì§ Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ steps.find-flutter.outputs.FLUTTER_DIR }}/build/app/outputs/flutter-apk/app-release.apk
            ${{ steps.find-flutter.outputs.FLUTTER_DIR }}/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            ${{ steps.find-flutter.outputs.FLUTTER_DIR }}/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            ${{ steps.find-flutter.outputs.FLUTTER_DIR }}/build/app/outputs/flutter-apk/app-x86_64-release.apk
            ${{ steps.find-flutter.outputs.FLUTTER_DIR }}/build/app/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
